//**************** MESHING (blockMeshDict) ************************************************* //
// Hull Bounding Box (Half Hull)
hullXmin  -0.113504;  hullXmax   6.16209;   dHullX    #eval{$hullXmax - $hullXmin};  // hull length (~Lpp)
hullYmin  -0.429252;  hullYmax   0;         dHullY    #eval{$hullYmax - $hullYmin};  // hull hlaf-breadth
hullZmin  0;          hullZmax   0.572322;  dHullZ    #eval{$hullZmax - $hullZmin};  // hull depth
zWL         0.244;     // Waterline or Free Surface Height

// XYZ Bounds of Rectangular Block
// xmin = -4Lpp, xmax = Lpp + 1.5Lpp
// ymin = -3Lpp, ymax = 0
// zmin = -2.5Lpp, zmax = 1.0Lpp
xmin    #eval{floor(-4*$dHullX)};    xmax    #eval{ceil(2.5*$dHullX)};     xcells  #eval{round($xmax - $xmin)};     // no. of celles between xmin and xmax (assume max 1m cell size)
ymin    #eval{floor(-3*$dHullX)};    ymax    0;                            ycells  #eval{round($ymax - $ymin)};
zmin    #eval{floor(-2.5*$dHullX)};  zmax    #eval{floor(0.7*$dHullX)};

// Z-dir Refinement
nCellFS    4;          // no. of refined cells just above and below Free Surface
FSCellThickness 0.014; // Free Surface Cell Thickness

z0   $zmin;
z1   #eval{$hullZmin - 1};   // 1m below the hull
z2   #eval{$zWL-($FSCellThickness*$nCellFS)};          // Just below Free Surface
z3   $zWL;                                  // Free Surface Height
z4   #eval{$zWL+($FSCellThickness*$nCellFS)};          // Just above Free Surface
z5   #eval{$hullZmax + 1};  // 1m above the hull
z6   $zmax;         // Top End of Atmosphere

// no. of cells between z0 and z1
zcells01    50;             zGrading01      0.05; // gradually reduced to 5%
zcells12    50;             zGrading12      1;
zcells23    $nCellFS;       zGrading23      1;
zcells34    $nCellFS;       zGrading34      1;
zcells45    40;             zGrading45      1;
zcells56    20;             zGrading56      5; // gradually increased by 5 times

yGrading    1;

//////////// REFINEMENT BOX REGIONS XY(Z)-dir refinement (topoSetDict and refineMeshDict) ////////////
// X dimensions
xminC6  #eval{$hullXmin - 0.1*dHullX}; // -10% of hull length
xminC5  #eval{$hullXmin - 0.2*dHullX}; // -20% of hull length
xminC4  #eval{$hullXmin - 0.3*dHullX}; // -30% of hull length
xminC3  #eval{$hullXmin - 0.5*dHullX}; // -50% of hull length
xminC2  #eval{$hullXmin - 0.8*dHullX}; // -80% of hull length
xminC1  #eval{$hullXmin - 1.6*dHullX}; // -160% of hull length

xmaxC6  #eval{$hullXmax + 0.03*dHullX}; // +3% of hull length
xmaxC5  #eval{$hullXmax + 0.06*dHullX}; // +6% of hull length
xmaxC4  #eval{$hullXmax + 0.15*dHullX}; // +15% of hull length
xmaxC3  #eval{$hullXmax + 0.30*dHullX}; // +30% of hull length
xmaxC2  #eval{$hullXmax + 0.45*dHullX}; // +45% of hull length
xmaxC1  #eval{$hullXmax + 0.60*dHullX}; // +60% of hull length

// Y dimensions
yminC6  #eval{$hullYmin - 0.2*dHullY}; // -20% of hull half breadth
yminC5  #eval{$hullYmin - 0.5*dHullY}; // -50% of hull half breadth
yminC4  #eval{$hullYmin - 1.5*dHullY}; // -150% of hull half breadth
yminC3  #eval{$hullYmin - 2.5*dHullY}; // -250% of hull half breadth
yminC2  #eval{$hullYmin - 6.0*dHullY}; // -600% of hull half breadth
yminC1  #eval{$hullYmin - 12.0*dHullY}; // -1200% of hull half breadth

ymaxC1  0; // Symmetry Plane, centre line
ymaxC2  0;
ymaxC3  0;
ymaxC4  0;
ymaxC5  0;
ymaxC6  0;

// Z dimensions (these values can effect the mesh non-orthogonality at the transitions)
zminC6  #eval{$hullZmin - 0.25*dHullZ}; // -25% of hull depth
zminC5  #eval{$hullZmin - 0.50*dHullZ}; // -50% of hull depth
zminC4  #eval{$hullZmin - 1.00*dHullZ}; // -100% of hull depth
zminC3  #eval{$hullZmin - 1.80*dHullZ}; // -180% of hull depth
zminC2  #eval{$hullZmin - 2.60*dHullZ}; // -260% of hull depth
zminC1  #eval{$hullZmin - 4.40*dHullZ}; // -440% of hull depth

zmaxC1  #eval{$hullZmax + 0.20*dHullZ}; // +20% of hull depth
zmaxC2  #eval{$hullZmax + 0.45*dHullZ}; // +45% of hull depth
zmaxC3  #eval{$hullZmax + 0.80*dHullZ}; // +80% of hull depth
zmaxC4  #eval{$hullZmax + 1.30*dHullZ}; // +130% of hull depth
zmaxC5  #eval{$hullZmax + 2.20*dHullZ}; // +220% of hull depth
zmaxC6  #eval{$hullZmax + 4.00*dHullZ}; // +400% of hull depth

//////////////  BODY MESH and REFINEMENT (snappyHexMeshDict) //////////// 
maxLocalCells   5000000;
maxGlobalCells  10000000;  // Max. Total Cells

// Hull Refinement (Edge, Surface, Region)
featuresIncludedAngle     150;     // [deg] surfaceFeatureExtractDict
edgeRefinementLevel       0;       // used with "hull.eMesh"
surfaceRefinementLevel    (0 0);   // (min_level max_level)
resolveFeatureAngle       45;      // [deg] smaller >> more feature
regionRefinementLevels    ((0 0)); // ((distance1 refinement_level1) (distance2 refinement_level2)) e.g. ((0.05 3) (0.1 2) (0.2 2)); >> 3 levels
nCellsBetweenLevels       3;

// Prism Layers
addLayers                 true;
nPrismLayers              3;
expansionRatio            1.5;
finalLayerThickness       0.7;   // relative size to background mesh
minLayerThickness         0.25;  // relative size to background mesh
layerFeatureAngle         180;   // ori 60, 0 >> only add layers to flat surface

// Additional Regions Refinements (e.g. Rudder region, Bow Thruster)




// ***************************************************************************** //

